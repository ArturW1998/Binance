{"version":3,"sources":["imgs/logo.svg","registerServiceWorker.js","constants/index.js","reducers/marketPairs.js","reducers/activeMarket.js","reducers/connectSocket.js","reducers/index.js","store/middleware.js","store/index.js","actions/index.js","utils/index.js","components/Loader/index.js","components/Row/index.js","components/Table/index.js","components/Title/index.js","components/Button/index.js","components/NavItem/index.js","containers/MarketPairs/index.js","components/Header/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ACTION_TYPES","PATHS","BASE_PATH","STREAM_PATH","STREAM_PARAM","LISTS","id","title","CONFIG","initState","UPDATE_MARKET_PAIRS","marketPairs","arguments","length","undefined","_ref","type","data","Object","objectSpread","SET_ACTIVE_MARKET","activeMarket","TOGGLE_SOCKET_STREAMS","connectSocket","status","rootReducer","combineReducers","middleware","LOCALSTORAGE_KEY","composeEnhancers","compose","savedState","save","namespace","store","preloadedState","createStore","applyMiddleware","apply","toConsumableArray","concat","configureStore","load","TABLE_DATA_LIST","getTickerBySymbol","ticker","forEach","symbol","s","latestPrice","c","priceChange","priceChangePercent","P","highPrice","h","lowPrice","l","quoteVolume","q","openPrice","o","DOTS_LIST","Loader","react_default","a","createElement","className","map","key","Row","tableDataList","list","_len","Array","_key","item","value","bold","getDataListWithValues","_ref2","_ref3","defaultProps","BTC","Table","filter","tickerArray","values","data-testid","row","endsWith","components_Row","assign","Title","Button","onClick","classes","cn","NavItem","pair","active","data-tab","PAIRS_LIST","MarketPairs","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","switchSocketStreams","disconnectSocketStreams","streams","connectSocketStreams","joinedStreams","join","connection","btoa","WebSocket","onopen","toggleSocketStreams","onmessage","_ref$data","_this$props","updateMarketPairs","market","JSON","parse","setActiveTab","setState","isLoaded","onerror","evt","readyState","OPEN","close","onclose","e","setActiveMarket","currentTarget","dataset","tab","inherits","createClass","_this2","_this$state","_this$props2","message","Fragment","components_Title","components_Button","components_NavItem","components_Table","components_Loader","Component","connect","Header","react_router_dom","to","src","logo","height","alt","BASE_NAME","App","es","basename","components_Header","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f98b1423.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.909daf68.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          /* eslint-disable no-console */\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n          /* eslint-enable */\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.'); // eslint-disable-line\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.'); // eslint-disable-line\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error); // eslint-disable-line\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      /* eslint-disable no-console */\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n      /* eslint-enable */\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister().then(() => {\n        console.log('Service worker unregistered'); // eslint-disable-line\n      });\n    });\n  }\n}\n","export const ACTION_TYPES = {\n  UPDATE_MARKET_PAIRS: 'UPDATE_MARKET_PAIRS',\n  SET_ACTIVE_MARKET: 'SET_ACTIVE_MARKET',\n  TOGGLE_SOCKET_STREAMS: 'TOGGLE_SOCKET_STREAMS',\n};\n\nexport const PATHS = {\n  BASE_PATH: 'wss://stream.binance.com',\n  STREAM_PATH: '/stream',\n  STREAM_PARAM: 'streams=',\n};\n\nexport const LISTS = {\n  PAIRS_LIST: ['BNB', 'BTC', 'ETH', 'USDT'],\n  DOTS_LIST: [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }],\n  TABLE_DATA_LIST: [\n    { title: 'Pair' },\n    { title: 'Latest Price' },\n    { title: 'Open' },\n    { title: 'High' },\n    { title: 'Low' },\n    { title: 'Volume' },\n  ],\n};\n\nexport const CONFIG = {\n  BASE_NAME: '/Binance/',\n  LOCALSTORAGE_KEY: 'markets',\n};\n","import { ACTION_TYPES } from '../constants';\n\nexport const initState = {};\n\nconst { UPDATE_MARKET_PAIRS } = ACTION_TYPES;\n\nconst marketPairs = (state = initState, { type, data }) => {\n  switch (type) {\n    case UPDATE_MARKET_PAIRS:\n      return { ...state, ...data };\n    default:\n      return state;\n  }\n};\n\nexport default marketPairs;\n","import { ACTION_TYPES } from '../constants';\n\nexport const initState = {};\n\nconst { SET_ACTIVE_MARKET } = ACTION_TYPES;\n\nconst activeMarket = (state = initState, { type, data }) => {\n  switch (type) {\n    case SET_ACTIVE_MARKET:\n      return { ...data };\n    default:\n      return state;\n  }\n};\n\nexport default activeMarket;\n","import { ACTION_TYPES } from '../constants';\n\nexport const initState = true;\n\nconst { TOGGLE_SOCKET_STREAMS } = ACTION_TYPES;\n\nconst connectSocket = (state = initState, { type, status }) => {\n  switch (type) {\n    case TOGGLE_SOCKET_STREAMS:\n      return status;\n    default:\n      return state;\n  }\n};\n\nexport default connectSocket;\n","import { combineReducers } from 'redux';\nimport marketPairs from './marketPairs';\nimport activeMarket from './activeMarket';\nimport connectSocket from './connectSocket';\n\nconst rootReducer = combineReducers({\n  marketPairs,\n  activeMarket,\n  connectSocket,\n});\n\nexport default rootReducer;\n","import logger from 'redux-logger';\n\nconst middleware = [];\n\nprocess.env.NODE_ENV === 'development' && middleware.push(logger);\n\nexport default middleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { save, load } from 'redux-localstorage-simple';\nimport { CONFIG } from '../constants';\nimport rootReducer from '../reducers';\nimport middleware from './middleware';\n\nconst { LOCALSTORAGE_KEY } = CONFIG;\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst savedState = save({ namespace: LOCALSTORAGE_KEY });\n\nconst configureStore = (preloadedState = {}) =>\n  createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middleware, savedState)),\n  );\n\nconst preloadedState = load({ namespace: LOCALSTORAGE_KEY });\n\nconst store = configureStore(preloadedState);\n\nexport default store;\n","import { ACTION_TYPES } from '../constants';\n\nconst {\n  SET_ACTIVE_MARKET,\n  UPDATE_MARKET_PAIRS,\n  TOGGLE_SOCKET_STREAMS,\n} = ACTION_TYPES;\n\nexport const setActiveMarket = data => ({ type: SET_ACTIVE_MARKET, data });\n\nexport const updateMarketPairs = data => ({ type: UPDATE_MARKET_PAIRS, data });\n\nexport const toggleSocketStreams = status => ({\n  type: TOGGLE_SOCKET_STREAMS,\n  status,\n});\n","import { LISTS } from '../constants';\n\nconst { TABLE_DATA_LIST } = LISTS;\n\nexport const getDataListWithValues = (list = TABLE_DATA_LIST, ...data) => {\n  const [\n    symbol,\n    latestPrice,\n    openPrice,\n    highPrice,\n    lowPrice,\n    quoteVolume,\n  ] = data;\n\n  if (!data.length) return list;\n\n  return list.map(item => {\n    switch (item.title) {\n      case 'Pair':\n        return { ...item, value: symbol, bold: true };\n      case 'Latest Price':\n        return { ...item, value: latestPrice };\n      case 'Open':\n        return { ...item, value: openPrice };\n      case 'High':\n        return { ...item, value: highPrice };\n      case 'Low':\n        return { ...item, value: lowPrice };\n      case 'Volume':\n        return { ...item, value: quoteVolume };\n      default:\n        return { ...item };\n    }\n  });\n};\n\nexport const getTickerBySymbol = (data = []) => {\n  const ticker = {};\n\n  data.forEach(\n    ({\n      s: symbol,\n      c: latestPrice,\n      p: priceChange,\n      P: priceChangePercent,\n      h: highPrice,\n      l: lowPrice,\n      q: quoteVolume,\n      o: openPrice,\n    }) => {\n      ticker[symbol] = {\n        symbol,\n        latestPrice,\n        priceChange,\n        priceChangePercent,\n        highPrice,\n        lowPrice,\n        quoteVolume,\n        openPrice,\n      };\n    },\n  );\n\n  return ticker;\n};\n","import React from 'react';\nimport { LISTS } from '../../constants';\n\nconst { DOTS_LIST } = LISTS;\n\nconst Loader = () => (\n  <div className=\"text-center w-100\">\n    <div className=\"lds-ellipsis\">\n      {DOTS_LIST.map(({ id }) => (\n        <div key={`dot-${id}`} className=\"dot\" />\n      ))}\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LISTS } from '../../constants';\nimport { getDataListWithValues } from '../../utils';\n\nconst Row = ({\n  symbol,\n  latestPrice,\n  highPrice,\n  lowPrice,\n  quoteVolume,\n  openPrice,\n}) => {\n  const { TABLE_DATA_LIST } = LISTS;\n  const tableDataList = getDataListWithValues(\n    TABLE_DATA_LIST,\n    symbol,\n    latestPrice,\n    highPrice,\n    lowPrice,\n    quoteVolume,\n    openPrice,\n  );\n\n  return (\n    <li className=\"table-item\">\n      <article className=\"d-none d-md-inline\">\n        <div className=\"row table-row small py-1\">\n          {tableDataList.map(({ title, value, bold }) => (\n            <div key={title} className=\"col d-flex align-items-center\">\n              {bold ? (\n                <h3 className=\"title font-weight-normal mb-0\">{value}</h3>\n              ) : (\n                <span>{value}</span>\n              )}\n            </div>\n          ))}\n        </div>\n      </article>\n\n      <article className=\"d-inline d-md-none\">\n        <div className=\"row table-row small py-1\">\n          {tableDataList.map(({ title, value, bold }) => (\n            <div key={title} className=\"col-4\">\n              <h2 className=\"font-weight-light text-muted small mb-0\">\n                {title}\n              </h2>\n\n              <span className={bold ? 'font-weight-bold' : 'small'}>\n                {value}\n              </span>\n            </div>\n          ))}\n        </div>\n      </article>\n    </li>\n  );\n};\n\nRow.propTypes = {\n  symbol: PropTypes.string,\n  latestPrice: PropTypes.string,\n  highPrice: PropTypes.string,\n  lowPrice: PropTypes.string,\n  quoteVolume: PropTypes.string,\n  openPrice: PropTypes.string,\n};\n\nRow.defaultProps = {\n  symbol: '',\n  latestPrice: '',\n  highPrice: '',\n  lowPrice: '',\n  quoteVolume: '',\n  openPrice: '',\n};\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LISTS } from '../../constants';\nimport Row from '../Row';\n\nconst { TABLE_DATA_LIST, PAIRS_LIST } = LISTS;\nconst BTC = PAIRS_LIST[1];\n\nconst Table = ({ ticker, filter }) => {\n  const tickerArray = Object.values(ticker);\n\n  return (\n    <ul className=\"table\" data-testid=\"Table\">\n      <li className=\"d-none d-md-inline\">\n        <div className=\"row table-header small py-1\">\n          {TABLE_DATA_LIST.map(({ title }) => (\n            <div key={title} className=\"col\">\n              <h2 className=\"title font-weight-bold mb-0\">{title}</h2>\n            </div>\n          ))}\n        </div>\n      </li>\n\n      {tickerArray.map(row =>\n        row.symbol.endsWith(filter) ? <Row key={row.symbol} {...row} /> : null,\n      )}\n    </ul>\n  );\n};\n\nTable.propTypes = {\n  ticker: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\n  filter: PropTypes.string,\n};\n\nTable.defaultProps = {\n  ticker: {},\n  filter: BTC,\n};\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => <h2 className=\"text-center pt-2\">{title}</h2>;\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  title: 'Simple title',\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Button = ({ onClick, value, id, className }) => {\n  const classes = cn('btn', className);\n\n  return (\n    <div className=\"d-flex justify-content-center pt-2\">\n      <button className={classes} onClick={onClick} data-testid={id}>\n        {value ? 'Disconnect' : 'Connect'}\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  value: PropTypes.bool,\n  id: PropTypes.string,\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  onClick: () => {},\n  value: true,\n  id: '',\n  className: '',\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { LISTS } from '../../constants';\n\nconst { PAIRS_LIST } = LISTS;\nconst BTC = PAIRS_LIST[1];\n\nconst NavItem = ({ onClick, pair, active, className }) => {\n  const classes = cn('nav-link', className, { active });\n\n  return (\n    <li className=\"nav-item\">\n      <button className={classes} onClick={onClick} data-tab={pair}>\n        {pair}\n        <span className=\"d-none d-sm-inline\"> Markets</span>\n      </button>\n    </li>\n  );\n};\n\nNavItem.propTypes = {\n  pair: PropTypes.string,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nNavItem.defaultProps = {\n  pair: BTC,\n  onClick: () => {},\n  active: false,\n  className: '',\n};\n\nexport default NavItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PATHS, LISTS } from '../../constants';\nimport {\n  setActiveMarket,\n  toggleSocketStreams,\n  updateMarketPairs,\n} from '../../actions';\nimport { getTickerBySymbol } from '../../utils';\nimport Loader from '../../components/Loader';\nimport Table from '../../components/Table';\nimport Title from '../../components/Title';\nimport Button from '../../components/Button';\nimport NavItem from '../../components/NavItem';\n\nconst { PAIRS_LIST } = LISTS;\n\nexport class MarketPairs extends Component {\n  static propTypes = {\n    marketPairs: PropTypes.objectOf(PropTypes.objectOf(PropTypes.string)),\n    activeMarket: PropTypes.shape({\n      market: PropTypes.string,\n    }),\n    connectSocket: PropTypes.bool,\n    setActiveMarket: PropTypes.func,\n    updateMarketPairs: PropTypes.func,\n    toggleSocketStreams: PropTypes.func,\n  };\n\n  static defaultProps = {\n    marketPairs: {},\n    activeMarket: {},\n    connectSocket: true,\n    setActiveMarket: () => {},\n    updateMarketPairs: () => {},\n    toggleSocketStreams: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {\n      marketPairs,\n      activeMarket: { market },\n    } = props;\n\n    this.state = {\n      isLoaded: marketPairs && market,\n    };\n\n    this.streams = ['!miniTicker@arr'];\n  }\n\n  componentDidMount() {\n    const { connectSocket } = this.props;\n\n    connectSocket && this.connectSocketStreams(this.streams);\n  }\n\n  componentWillUnmount() {\n    const { connectSocket } = this.props;\n\n    connectSocket && this.disconnectSocketStreams(this.streams);\n  }\n\n  switchSocketStreams = () => {\n    const { connectSocket } = this.props;\n\n    connectSocket\n      ? this.disconnectSocketStreams(this.streams)\n      : this.connectSocketStreams(this.streams);\n  };\n\n  connectSocketStreams = streams => {\n    const { BASE_PATH, STREAM_PATH, STREAM_PARAM } = PATHS;\n    const joinedStreams = streams.join('/');\n    const connection = btoa(joinedStreams);\n\n    this[connection] = new WebSocket(\n      `${BASE_PATH}${STREAM_PATH}?${STREAM_PARAM}${joinedStreams}`,\n    );\n\n    this[connection].onopen = () => {\n      const { toggleSocketStreams } = this.props;\n\n      toggleSocketStreams(true);\n    };\n\n    this[connection].onmessage = ({ data = {} }) => {\n      const {\n        updateMarketPairs,\n        activeMarket: { market },\n      } = this.props;\n      const ticker = getTickerBySymbol(JSON.parse(data).data) || {};\n      const BTC = PAIRS_LIST[1];\n\n      updateMarketPairs(ticker);\n\n      !market && this.setActiveTab(BTC);\n\n      this.setState({\n        isLoaded: true,\n      });\n    };\n\n    this[connection].onerror = evt => {\n      console.error(evt); // eslint-disable-line\n    };\n  };\n\n  disconnectSocketStreams = streams => {\n    const joinedStreams = streams.join('/');\n    const connection = btoa(joinedStreams);\n\n    this[connection].readyState === WebSocket.OPEN && this[connection].close();\n\n    this[connection].onclose = () => {\n      const { toggleSocketStreams } = this.props;\n\n      toggleSocketStreams(false);\n    };\n  };\n\n  setActiveTab = e => {\n    const { setActiveMarket } = this.props;\n\n    const market = e.currentTarget ? e.currentTarget.dataset.tab : e;\n\n    const data = {\n      market,\n    };\n\n    setActiveMarket(data);\n  };\n\n  render() {\n    const { error, isLoaded } = this.state;\n    const {\n      activeMarket: { market },\n      marketPairs,\n      connectSocket,\n    } = this.props;\n\n    if (error) {\n      return <div className=\"alert alert-danger\">{error.message}</div>;\n    }\n\n    if (!isLoaded) {\n      return <Loader />;\n    }\n\n    return (\n      <>\n        <Title title=\"The World's Leading Cryptocurrency Exchange\" />\n\n        <Button\n          onClick={this.switchSocketStreams}\n          className=\"btn-warning\"\n          id=\"Connect\"\n          value={connectSocket}\n        />\n\n        <ul className=\"nav nav-tabs pt-2\" data-testid=\"NavGrid\">\n          {PAIRS_LIST.map(pair => {\n            const active = market === pair;\n\n            return (\n              <NavItem\n                key={pair}\n                onClick={this.setActiveTab}\n                pair={pair}\n                active={active}\n              />\n            );\n          })}\n        </ul>\n\n        {marketPairs && market && (\n          <Table ticker={marketPairs} filter={market} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default connect(\n  ({ marketPairs, activeMarket, connectSocket }) => ({\n    marketPairs,\n    activeMarket,\n    connectSocket,\n  }),\n  {\n    setActiveMarket,\n    updateMarketPairs,\n    toggleSocketStreams,\n  },\n)(MarketPairs);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../imgs/logo.svg';\n\nconst Header = () => (\n  <header>\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <img src={logo} height=\"25\" alt=\"Binance Logo\" />\n      </Link>\n\n      <div className=\"navbar-text\">\n        <span className=\"small text-white\">Trade history viewer web app</span>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { CONFIG } from './constants';\nimport store from './store';\nimport MarketPairs from './containers/MarketPairs';\nimport Header from './components/Header';\n\nconst { BASE_NAME } = CONFIG;\n\nconst App = () => (\n  <Provider store={store}>\n    <Router basename={BASE_NAME}>\n      <>\n        <Header />\n        <main className=\"main\" data-testid=\"MainWrapper\">\n          <section className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <Route exact path=\"/\" component={MarketPairs} />\n              </div>\n            </div>\n          </section>\n        </main>\n      </>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}